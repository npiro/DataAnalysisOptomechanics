function [fitresult, gof] = DoubleLorentzianFit(x, y)
%CREATEFIT1(X,Y)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 11-Jul-2014 16:59:58


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( x, y );
[M,MI] = max(yData);
[m,mi] = min(yData);
N = length(xData);
if (abs(MI-N/2) < abs(mi-N/2)) % max points is closer to center than min point
    sign = 1; % possitive lorentzian
else
    sign = -1; % negative lorentzian
end

a = M-m;
mid = 0.5*(m+M);
[pks,locs]=findpeaks(-yData,'SORTSTR','descend','MINPEAKHEIGHT',-0.2);
[pks2,locs2]=findpeaks(-abs(yData-mid),'SORTSTR','descend','MINPEAKHEIGHT',-0.2);
hm1 = xData(locs2(1));
hm2 = xData(locs2(2));
hwhm = 0.5*abs(hm1-hm2);
x1 = xData(locs(1));
x2 = xData(locs(2));
%y1 = pks(1);
%y2 = pks(2);

% Set up fittype and options.
ft = fittype( 'c+a/(1+((x-x01)/G)^2)+a/(1+((x-x02)/G)^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( ft );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf -Inf -Inf -Inf];
opts.StartPoint = [hwhm sign*a M x1 x2];
opts.Upper = [Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
%figure( 'Name', 'untitled fit 1' );
%h = plot( fitresult, xData, yData );
%legend( h, 'y vs. x', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
%xlabel( 'x' );
%ylabel( 'y' );
%grid on


